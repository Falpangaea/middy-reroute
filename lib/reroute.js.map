{"version":3,"file":"reroute.js","sources":["../src/utils/logger.js","../src/utils/deepmerge.js","../src/utils/cache-service.js","../src/reroute.js","../src/reroute-origin.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import NodeCache from 'node-cache';\n\nclass Cache {\n  constructor(ttlSeconds) {\n    this.cache = new NodeCache({\n      stdTTL: ttlSeconds,\n      checkperiod: ttlSeconds * 0.2,\n      useClones: false,\n    });\n\n    this.ttl = ttlSeconds;\n  }\n\n  get(key, storeFunction) {\n    if (this.ttl > 0) {\n      const value = this.cache.get(key);\n      if (value) {\n        return Promise.resolve(value);\n      }\n    }\n    return storeFunction().then(result => {\n      this.ttl > 0 && this.cache.set(key, result, this.ttl);\n      return result;\n    });\n  }\n\n  del(keys) {\n    this.cache.del(keys);\n  }\n\n  setDefaultTtl(ttl) {\n    this.ttl = ttl;\n    this.ttl === 0 && this.flush();\n  }\n\n  delStartWith(startStr = '') {\n    if (!startStr) {\n      return;\n    }\n\n    const keys = this.cache.keys();\n    for (const key of keys) {\n      if (key.indexOf(startStr) === 0) {\n        this.del(key);\n      }\n    }\n  }\n\n  flush() {\n    this.cache.flushAll();\n  }\n}\n\nexport default Cache;\n","import AWS from 'aws-sdk';\nimport { STATUS_CODES } from 'http';\nimport logger from './utils/logger';\nimport axios from 'axios';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\nimport langParser from 'accept-language-parser';\nimport merge, { all as mergeAll } from './utils/deepmerge';\nimport CacheService from './utils/cache-service';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\naxios.interceptors.response.use(\n  function(response) {\n    // Do something with response data\n    return response;\n  },\n  function(error) {\n    // Do something with response error\n    return Promise.reject(error);\n  },\n);\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options, S3;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host, country, language] = getHeaderValues(\n    ['host', 'cloudfront-viewer-country', 'accept-language'],\n    request.headers,\n  );\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  const originBucket =\n    s3DomainName && s3DomainName.replace('.s3.amazonaws.com', '');\n  const defaults = {\n    file: '_redirects',\n    rules: undefined,\n    multiFile: false,\n    rulesBucket: originBucket,\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:\\s*(?:#.*)*)$[\\r\\n]{0,1}|(?:#.*)*/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?(?:(?:\\s+)?([^\\s\\r\\n]+))?/,\n      absoluteUri: /^(?:[a-z]+:)?\\/\\//,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n    cacheTtl: ttl,\n    incomingProtocol: 'https://',\n    s3Options: { httpOptions: { connectTimeout: 2000 } }, // default 2 seconds\n  };\n  options = mergeAll([\n    defaults,\n    opts,\n    {\n      originBucket,\n      host,\n      country,\n      language,\n    },\n  ]);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  S3 = S3 || new AWS.S3(options.s3Options);\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${options.host}\n    Origin: ${s3DomainName}\n    Country: ${options.country}\n    Language: ${options.language}\n    `);\n\n  // Origin must be S3\n  if (!s3DomainName) throw new Error('Must use S3 as Origin');\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    const [first, fullpath, file, filename] = isUnFriendlyUrl || [];\n    const isIndex = filename === 'index';\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (isUnFriendlyUrl && (!keyExists || isIndex)) {\n      const end = isIndex ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n      logger('Rules: ', data);\n\n      // Find URI match in the rules\n      const match = findMatch(\n        data,\n        request.uri,\n        host,\n        options.incomingProtocol,\n      );\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(\n              forceDefaultDoc(match.parsedTo),\n              s3DomainName,\n              handler.event,\n            );\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = await rewrite(\n          forceDefaultDoc(request.uri),\n          s3DomainName,\n          handler.event,\n        );\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!', handler.event);\n  return;\n};\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    param => headers[param] && headers[param][0] && headers[param][0].value,\n  );\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst isAbsoluteURI = to => {\n  const test = options.regex.absoluteUri.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' && !!options.defaultDoc\n    ? path.join(uri, options.defaultDoc)\n    : uri;\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\n///////////////////////\n// Rules Parsing     //\n///////////////////////\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, obj[key]),\n    pattern,\n  ).replace(/(:splat)/g, '');\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst parseConditions = conditions =>\n  !!conditions\n    ? conditions.split(';').reduce((results, next) => {\n        const [key, value] = next.split('=');\n        return { ...results, [key.toLowerCase()]: value.split(',') };\n      }, {})\n    : {};\n\nconst parseRules = stringFile => {\n  logger('Parsing String: ', stringFile);\n  return (\n    stringFile\n      // remove empty and commented lines\n      .replace(options.regex.ignoreRules, '')\n      // split all lines\n      .split(/[\\r\\n]/gm)\n      // strip out the last line break\n      .filter(l => l !== '')\n      .map(l => {\n        // regex\n        const [first, from, to, status, force, conditions] = l.match(\n          options.regex.ruleline,\n        );\n        // restructure into object\n        return {\n          from,\n          to,\n          status: status ? parseInt(status, 10) : options.defaultStatus,\n          force: !!force,\n          conditions: parseConditions(conditions),\n        };\n      })\n  );\n};\n\nconst countryParser = (supportedCountryArray, acceptCountryHeader) =>\n  supportedCountryArray\n    .map(c => c.toLowerCase())\n    .includes(acceptCountryHeader.toLowerCase());\n\nconst findMatch = (data, path, host, protocol) => {\n  let params;\n  const fullUri = host && `${protocol}${host}${path}`;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = isAbsoluteURI(o.from) ? from(fullUri) : from(parse(path).pathname);\n\n    // If there specific language rules, do they match\n    const languagePass = !!o.conditions.language\n      ? !!options.language &&\n        !!langParser.pick(o.conditions.language, options.language, {\n          loose: true,\n        })\n      : true;\n\n    // If there specific country rules, do they match\n    const countryPass = !!o.conditions.country\n      ? !!options.country &&\n        countryParser(o.conditions.country, options.country)\n      : true;\n\n    // Let's make sure all our conditions pass IF set\n    const passesConditions = languagePass && countryPass;\n    return params !== false && passesConditions;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\n///////////////////////\n// Data Fetching     //\n///////////////////////\nconst doesKeyExist = rawKey => {\n  const Key = rawKey.replace(/^\\/+([^\\/])/, '$1');\n  logger('doesKeyExist: ', { Key, Bucket: options.originBucket });\n  const cacheKey = `doesKeyExist_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () =>\n    S3.headObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then(data => {\n        logger('doesKeyExist FOUND: ', Key);\n        return true;\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey' || err.code === 'NotFound') {\n          logger('doesKeyExist NOT Found: ', Key);\n          return false;\n        }\n        logger('doesKeyExist err: ', err);\n        return false;\n      }),\n  );\n};\n\nconst getRedirectData = () => {\n  const Key = !options.multiFile\n    ? options.file\n    : `${options.file}_${options.host}`;\n  const cacheKey = `getRedirectData_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () => {\n    logger(`\n      Getting Rules from: ${options.rules ? 'Options' : 'S3'}\n      Bucket: ${options.rulesBucket}\n      Key: ${Key}`);\n    return !!options.rules\n      ? Promise.resolve(parseRules(options.rules))\n      : S3.getObject({\n          Bucket: options.rulesBucket,\n          Key,\n        })\n          .promise()\n          .then(data => parseRules(data.Body.toString()))\n          .catch(err => {\n            logger('No _redirects file', err);\n            return false;\n          });\n  });\n};\n\nconst getProxyResponse = resp => {\n  const { status, statusText: statusDescription, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription,\n    headers,\n    body: data.toString('base64'),\n    bodyEncoding: 'base64',\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  const Key = options.custom404;\n  const cacheKey = `get404Response_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () =>\n    S3.getObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then(({ Body }) => {\n        logger('Custom 404 FOUND');\n        return {\n          status: '404',\n          statusDescription: STATUS_CODES['404'],\n          headers: {\n            'content-type': [\n              {\n                key: 'Content-Type',\n                value: 'text/html',\n              },\n            ],\n          },\n          body: Body.toString(),\n        };\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey') {\n          logger('Custom 404 NOT Found');\n        }\n        logger('Get404ResponseErr', err);\n        return false;\n      }),\n  );\n};\n\n///////////////////////////\n// Event Generators     //\n//////////////////////////\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, host, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, {\n      Records: [\n        {\n          cf: {\n            request: {\n              headers: { host: [{ key: 'Host', value: host }] },\n              uri: to,\n            },\n          },\n        },\n      ],\n    });\n  logger('Rewriting Event: ', JSON.stringify(resp));\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = {\n    ...lambdaReponseToObj(request),\n    url,\n    validateStatus: null,\n    maxContentLength: 8000000,\n    responseType: 'arraybuffer',\n  };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then(resp => {\n      logger('PROXY data: ', _omit(resp, ['request', 'config']));\n      return getProxyResponse(resp);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n","import dotProp from 'dot-prop-immutable';\nimport logger from './utils/logger';\nimport CacheService from './utils/cache-service';\nimport merge from './utils/deepmerge';\nimport AWS from 'aws-sdk';\n\nconst S3_SUFFIX = '.s3.amazonaws.com';\nconst ORIGIN_S3_DOTPATH = 'Records.0.cf.request.origin.s3';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\nlet DDB;\nconst rerouteOrigin = async (opts = {}, handler, next) => {\n  const { context } = handler;\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host] = getHeaderValues(['host'], request.headers);\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  const originBucket = s3DomainName && s3DomainName.replace(S3_SUFFIX, '');\n\n  const tableSuffix = '-domainmap';\n  const functionSuffix = '-originrequest';\n  const defaults = {\n    functionSuffix,\n    tableSuffix,\n    tableName: getTableFromFunctionName(\n      context.functionName,\n      opts.functionSuffix || functionSuffix,\n      opts.tableSuffix || tableSuffix,\n    ),\n    cacheTtl: ttl,\n  };\n  const options = merge(defaults, opts);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  DDB =\n    DDB ||\n    new AWS.DynamoDB({\n      apiVersion: '2012-08-10',\n      region: 'us-east-1',\n    });\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${host}\n    Origin: ${s3DomainName}\n    `);\n\n  try {\n    const domainData = await getDomainData(options.tableName, host);\n    logger({ domainData });\n    handler.event = !!domainData\n      ? dotProp.merge(handler.event, ORIGIN_S3_DOTPATH, {\n          region: domainData.region,\n          domainName: domainData.origin,\n        })\n      : handler.event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  return;\n};\n\nexport default opts => ({\n  before: rerouteOrigin.bind(null, opts),\n});\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    param => headers[param] && headers[param][0] && headers[param][0].value,\n  );\n\n// from:  us-east-1.myproject-prod-originrequest\n// to:    myproject-prod-domainmap\nconst getTableFromFunctionName = (\n  functionName,\n  functionSuffix,\n  tableSuffix,\n) => {\n  logger(`\n  getTableFromFunctionName:\n  ${JSON.stringify({ functionName, functionSuffix, tableSuffix })}\n  `);\n  const [rest, stackname] =\n    functionName.match(`^(?:us-east-1\\.)?(.+)${functionSuffix}$`) || [];\n  return `${stackname}${tableSuffix}`;\n};\n\nconst getDomainData = (table, host) =>\n  cache.get(`getDomainData_${host}`, () =>\n    DDB.getItem({\n      Key: {\n        Host: {\n          S: host,\n        },\n      },\n      TableName: table,\n    })\n      .promise()\n      .then(data => {\n        logger(`\n      getDomainData: \n      ${JSON.stringify(data)}`);\n        return (\n          data.Item &&\n          data.Item.Origin &&\n          data.Item.Origin.S && {\n            host: data.Item.Host.S,\n            origin: data.Item.Origin.S,\n            region: (data.Item.Region && data.Item.Region.S) || 'us-east-1',\n          }\n        );\n      }),\n  );\n"],"names":["log","debug","console","bind","deepmerge","x","y","arrayMerge","rest","merge","combineMerge","all","arr","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","Cache","constructor","ttlSeconds","cache","NodeCache","stdTTL","checkperiod","useClones","ttl","get","key","storeFunction","Promise","resolve","then","result","set","del","keys","setDefaultTtl","flush","delStartWith","startStr","flushAll","CacheService","axios","interceptors","response","use","error","reject","route","pathMatch","sensitive","strict","end","S3","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","getHeaderValues","headers","host","country","language","s3DomainName","s3","domainName","originBucket","replace","defaults","file","rules","undefined","multiFile","rulesBucket","regex","htmlEnd","ignoreRules","ruleline","absoluteUri","defaultStatus","redirectStatuses","friendlyUrls","defaultDoc","custom404","cacheTtl","incomingProtocol","s3Options","httpOptions","connectTimeout","mergeAll","AWS","logger","JSON","stringify","uri","Error","keyExists","doesKeyExist","isUnFriendlyUrl","match","first","fullpath","filename","isIndex","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","paramArr","map","param","includes","to","test","capitalizeParam","split","charAt","toUpperCase","join","path","extname","lambdaReponseToObj","req","method","body","_omit","_reduce","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","find","replacePlaceholders","obj","pattern","_","k","replaceSplats","replaceAll","parseConditions","conditions","reduce","results","toLowerCase","parseRules","stringFile","filter","l","from","force","parseInt","countryParser","supportedCountryArray","acceptCountryHeader","c","protocol","params","fullUri","_find","o","parse","pathname","languagePass","langParser","pick","loose","countryPass","passesConditions","rawKey","Key","Bucket","cacheKey","headObject","promise","catch","errorType","code","getObject","Body","toString","getProxyResponse","resp","statusDescription","statusText","_omitBy","bodyEncoding","get404Response","STATUS_CODES","location","url","config","validateStatus","maxContentLength","responseType","before","S3_SUFFIX","ORIGIN_S3_DOTPATH","DDB","rerouteOrigin","context","tableSuffix","functionSuffix","tableName","getTableFromFunctionName","functionName","DynamoDB","apiVersion","region","domainData","getDomainData","dotProp","stackname","table","getItem","Host","S","TableName","Item","Origin","Region"],"mappings":"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"}