{"version":3,"file":"reroute.js","sources":["../src/utils/logger.js","../src/s3.js","../src/utils/deepmerge.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import AWS from 'aws-sdk';\nconst S3 = new AWS.S3();\n\nexport default S3;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import logger from './utils/logger';\nimport { STATUS_CODES } from 'http';\nimport S3 from './s3';\nimport axios from 'axios';\nimport merge from './utils/deepmerge';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const defaults = {\n    file: '_redirects',\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:#.*[\\r\\n]|\\s*[\\r\\n])/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?/,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    bucketName: origin.s3.domainName.replace('.s3.amazonaws.com', ''),\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n  };\n  options = merge(defaults, opts);\n  logger('options', options);\n\n  logger('REQUEST.URI: ', request.uri);\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Check if there is a file with extension at the end of the path\n    const isFile = path.extname(request.uri) !== '';\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (!keyExists && isUnFriendlyUrl) {\n      const [first, fullpath, file, filename] = isUnFriendlyUrl;\n      const end = filename === 'index' ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n\n      // Find URI match in the rules\n      const match = findMatch(data, request.uri);\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(forceDefaultDoc(match.parsedTo), handler.event);\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = !isFile\n          ? await rewrite(forceDefaultDoc(request.uri), handler.event)\n          : handler.event;\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!');\n  return;\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\n\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst findMatch = (data, uri) => {\n  let params;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = from(parse(uri).pathname);\n    return params !== false;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\nconst getRedirectData = () => {\n  logger('Getting Rules from: ', options.rules ? 'Options' : 'S3');\n  return options.rules\n    ? parseRules(options.rules)\n    : S3.getObject({\n        Bucket: options.bucketName,\n        Key: options.file,\n      })\n        .promise()\n        .then(data => parseRules(data.Body.toString()));\n};\n\nconst parseRules = stringFile =>\n  stringFile\n    // remove empty and commented lines\n    .replace(options.regex.ignoreRules, '')\n    // split all lines\n    .split(/[\\r\\n]/gm)\n    // strip out the last line break\n    .filter(l => l !== '')\n    .map(l => {\n      // regex\n      const [first, from, to, status, force] = l.match(options.regex.ruleline);\n      // restructure into object\n      return {\n        from,\n        to,\n        status: status ? parseInt(status, 10) : options.defaultStatus,\n        force: !!force,\n      };\n    });\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, (_, k) => obj[key]),\n    pattern,\n  );\n\nconst doesKeyExist = key => {\n  const parsedKey = key.replace(/^\\/+/, '');\n  return S3.headObject({\n    Bucket: options.bucketName,\n    Key: parsedKey,\n  })\n    .promise()\n    .then(data => {\n      logger('Key FOUND: ', parsedKey);\n      return true;\n    })\n    .catch(err => {\n      if (err.statusCode === 404) {\n        logger('Key NOT Found: ', parsedKey);\n        return false;\n      }\n      throw err;\n    });\n};\n\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, { Records: [{ cf: { request: { uri: to } } }] });\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = { ...lambdaReponseToObj(request), validateStatus: null };\n  logger('PROXY config: ', config);\n  return axios(url, config)\n    .then(data => {\n      logger('PROXY data: ', _omit(data, ['request', 'config']));\n      return getProxyResponse(data);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst isAbsoluteURI = to => {\n  const test = /^(?:[a-z]+:)?\\/\\//.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' ? path.join(uri, options.defaultDoc) : uri;\n\nconst getProxyResponse = resp => {\n  const { status, statusText, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription: statusText,\n    headers,\n    body: JSON.stringify(data),\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  return S3.getObject({\n    Bucket: options.bucketName,\n    Key: options.custom404,\n  })\n    .promise()\n    .then(({ Body }) => {\n      logger('Custom 404 FOUND');\n      return {\n        status: '404',\n        statusDescription: STATUS_CODES['404'],\n        headers: {\n          'content-type': [\n            {\n              key: 'Content-Type',\n              value: 'text/html',\n            },\n          ],\n        },\n        body: Body.toString(),\n      };\n    })\n    .catch(err => {\n      if (err.statusCode === 404) {\n        logger('Custom 404 NOT Found');\n        return false;\n      }\n      logger('Custom 404 Exists');\n      throw err;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n"],"names":["log","debug","console","bind","S3","AWS","deepmerge","x","y","arrayMerge","rest","merge","combineMerge","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","route","pathMatch","sensitive","strict","end","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","defaults","file","regex","htmlEnd","ignoreRules","ruleline","defaultStatus","redirectStatuses","bucketName","s3","domainName","replace","friendlyUrls","defaultDoc","custom404","logger","uri","keyExists","doesKeyExist","isFile","path","extname","isUnFriendlyUrl","match","first","fullpath","filename","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","includes","find","params","_find","o","from","parse","pathname","replaceAll","to","rules","parseRules","getObject","Bucket","Key","promise","then","Body","toString","stringFile","split","filter","l","map","force","parseInt","obj","pattern","replaceSplats","replacePlaceholders","_","k","_reduce","result","key","parsedKey","headObject","catch","statusCode","statusDescription","STATUS_CODES","headers","location","resp","get404Response","url","config","lambdaReponseToObj","validateStatus","axios","_omit","getProxyResponse","req","method","body","test","capitalizeParam","param","charAt","toUpperCase","join","statusText","_omitBy","response","JSON","stringify","before"],"mappings":"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"}