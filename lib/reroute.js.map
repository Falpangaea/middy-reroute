{"version":3,"file":"reroute.js","sources":["../src/utils/logger.js","../src/s3.js","../src/utils/deepmerge.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import AWS from 'aws-sdk';\nconst S3 = new AWS.S3();\n\nexport default S3;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import logger from './utils/logger';\nimport { STATUS_CODES } from 'http';\nimport S3 from './s3';\nimport axios from 'axios';\nimport merge from './utils/deepmerge';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options, originBucket, incomingHost;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  incomingHost =\n    request.headers.host &&\n    request.headers.host[0] &&\n    request.headers.host[0].value;\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  originBucket = s3DomainName && s3DomainName.replace('.s3.amazonaws.com', '');\n\n  const defaults = {\n    file: '_redirects',\n    multiFile: true,\n    rulesBucket: originBucket,\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:#.*[\\r\\n]|\\s*[\\r\\n])/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?/,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n  };\n  options = merge(defaults, opts);\n  logger('Raw Event: ', JSON.stringify(handler.event));\n  logger('Middleware Options: ', options);\n  logger('Request Host: ', incomingHost);\n  logger('Request Origin: ', s3DomainName);\n\n  // Origin must be S3\n  if (!s3DomainName) throw new Error('Must use S3 as Origin');\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (!keyExists && isUnFriendlyUrl) {\n      const [first, fullpath, file, filename] = isUnFriendlyUrl;\n      const end = filename === 'index' ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n      logger('Rules: ', data);\n\n      // Find URI match in the rules\n      const match = findMatch(data, request.uri);\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(\n              forceDefaultDoc(match.parsedTo),\n              s3DomainName,\n              handler.event,\n            );\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = await rewrite(\n          forceDefaultDoc(request.uri),\n          s3DomainName,\n          handler.event,\n        );\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!');\n  return;\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\n\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst findMatch = (data, uri) => {\n  let params;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = from(parse(uri).pathname);\n    return params !== false;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\nconst getRedirectData = () => {\n  const Key = !options.multiFile\n    ? options.file\n    : `${options.file}_${incomingHost}`;\n  logger(`\n    Getting Rules from: ${options.rules ? 'Options' : 'S3'}\n    Bucket: ${options.rulesBucket}\n    Key: ${Key}`);\n  return options.rules\n    ? parseRules(options.rules)\n    : S3.getObject({\n        Bucket: options.rulesBucket,\n        Key,\n      })\n        .promise()\n        .then(data => parseRules(data.Body.toString()))\n        .catch(err => {\n          logger('No _redirects file', err);\n          return false;\n        });\n};\n\nconst parseRules = stringFile =>\n  stringFile\n    // remove empty and commented lines\n    .replace(options.regex.ignoreRules, '')\n    // split all lines\n    .split(/[\\r\\n]/gm)\n    // strip out the last line break\n    .filter(l => l !== '')\n    .map(l => {\n      // regex\n      const [first, from, to, status, force] = l.match(options.regex.ruleline);\n      // restructure into object\n      return {\n        from,\n        to,\n        status: status ? parseInt(status, 10) : options.defaultStatus,\n        force: !!force,\n      };\n    });\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, (_, k) => obj[key]),\n    pattern,\n  );\n\nconst doesKeyExist = key => {\n  const parsedKey = key.replace(/^\\/+/, '');\n  return S3.headObject({\n    Bucket: originBucket,\n    Key: parsedKey,\n  })\n    .promise()\n    .then(data => {\n      logger('doesKeyExist FOUND: ', parsedKey);\n      return true;\n    })\n    .catch(err => {\n      if (err.errorType === 'NoSuchKey') {\n        logger('doesKeyExist NOT Found: ', parsedKey);\n        return false;\n      }\n      logger('doesKeyExist err: ', err);\n      return false;\n    });\n};\n\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, host, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, {\n      Records: [\n        {\n          cf: {\n            request: {\n              headers: { host: [{ key: 'Host', value: host }] },\n              uri: to,\n            },\n          },\n        },\n      ],\n    });\n  logger('Rewriting Event: ', JSON.stringify(resp));\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = { ...lambdaReponseToObj(request), validateStatus: null, url };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then(data => {\n      logger('PROXY data: ', _omit(data, ['request', 'config']));\n      return getProxyResponse(data);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst isAbsoluteURI = to => {\n  const test = /^(?:[a-z]+:)?\\/\\//.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' && !!options.defaultDoc\n    ? path.join(uri, options.defaultDoc)\n    : uri;\n\nconst getProxyResponse = resp => {\n  const { status, statusText, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription: statusText,\n    headers,\n    body: JSON.stringify(data),\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  return S3.getObject({\n    Bucket: originBucket,\n    Key: options.custom404,\n  })\n    .promise()\n    .then(({ Body }) => {\n      logger('Custom 404 FOUND');\n      return {\n        status: '404',\n        statusDescription: STATUS_CODES['404'],\n        headers: {\n          'content-type': [\n            {\n              key: 'Content-Type',\n              value: 'text/html',\n            },\n          ],\n        },\n        body: Body.toString(),\n      };\n    })\n    .catch(err => {\n      if (err.errorType === 'NoSuchKey') {\n        logger('Custom 404 NOT Found');\n      }\n      logger('Get404ResponseErr', err);\n      return false;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n"],"names":["log","debug","console","bind","S3","AWS","deepmerge","x","y","arrayMerge","rest","merge","combineMerge","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","route","pathMatch","sensitive","strict","end","originBucket","incomingHost","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","headers","host","s3DomainName","s3","domainName","replace","defaults","file","multiFile","rulesBucket","regex","htmlEnd","ignoreRules","ruleline","defaultStatus","redirectStatuses","friendlyUrls","defaultDoc","custom404","logger","JSON","stringify","Error","keyExists","doesKeyExist","uri","isUnFriendlyUrl","match","first","fullpath","filename","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","includes","find","params","_find","o","from","parse","pathname","replaceAll","to","Key","rules","parseRules","getObject","Bucket","promise","then","Body","toString","catch","stringFile","split","filter","l","map","force","parseInt","obj","pattern","replaceSplats","replacePlaceholders","_","k","_reduce","result","key","parsedKey","headObject","errorType","statusDescription","STATUS_CODES","location","resp","get404Response","url","config","lambdaReponseToObj","validateStatus","axios","_omit","getProxyResponse","req","method","body","test","capitalizeParam","param","charAt","toUpperCase","join","path","extname","statusText","_omitBy","response","before"],"mappings":"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"}