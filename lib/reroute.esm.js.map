{"version":3,"file":"reroute.esm.js","sources":["../src/utils/logger.js","../src/s3.js","../src/utils/deepmerge.js","../src/utils/cache-service.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import AWS from 'aws-sdk';\nconst S3 = new AWS.S3();\n\nexport default S3;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import NodeCache from 'node-cache';\n\nclass Cache {\n  constructor(ttlSeconds) {\n    this.cache = new NodeCache({\n      stdTTL: ttlSeconds,\n      checkperiod: ttlSeconds * 0.2,\n      useClones: false,\n    });\n\n    this.ttl = ttlSeconds;\n  }\n\n  get(key, storeFunction) {\n    if (this.ttl > 0) {\n      const value = this.cache.get(key);\n      if (value) {\n        return Promise.resolve(value);\n      }\n    }\n    return storeFunction().then(result => {\n      this.ttl > 0 && this.cache.set(key, result, this.ttl);\n      return result;\n    });\n  }\n\n  del(keys) {\n    this.cache.del(keys);\n  }\n\n  setDefaultTtl(ttl) {\n    this.ttl = ttl;\n    this.ttl === 0 && this.flush();\n  }\n\n  delStartWith(startStr = '') {\n    if (!startStr) {\n      return;\n    }\n\n    const keys = this.cache.keys();\n    for (const key of keys) {\n      if (key.indexOf(startStr) === 0) {\n        this.del(key);\n      }\n    }\n  }\n\n  flush() {\n    this.cache.flushAll();\n  }\n}\n\nexport default Cache;\n","import logger from './utils/logger';\nimport { STATUS_CODES } from 'http';\nimport S3 from './s3';\nimport axios from 'axios';\nimport merge from './utils/deepmerge';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\nimport CacheService from './utils/cache-service';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options, originBucket, incomingHost;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  incomingHost =\n    request.headers.host &&\n    request.headers.host[0] &&\n    request.headers.host[0].value;\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  originBucket = s3DomainName && s3DomainName.replace('.s3.amazonaws.com', '');\n\n  const defaults = {\n    file: '_redirects',\n    multiFile: false,\n    rulesBucket: originBucket,\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:#.*[\\r\\n]|\\s*[\\r\\n])/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?(?:(?:\\s+)?([^\\s\\r\\n]+))?/,\n      absoluteUri: /^(?:[a-z]+:)?\\/\\//,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n    cacheTtl: ttl,\n  };\n  options = merge(defaults, opts);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n\n    Request URI: ${request.uri}\n    Request Host: ${incomingHost}\n    Request Origin: ${s3DomainName}`);\n\n  // Origin must be S3\n  if (!s3DomainName) throw new Error('Must use S3 as Origin');\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (!keyExists && isUnFriendlyUrl) {\n      const [first, fullpath, file, filename] = isUnFriendlyUrl;\n      const end = filename === 'index' ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n      logger('Rules: ', data);\n\n      // Find URI match in the rules\n      const match = findMatch(data, request.uri);\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(\n              forceDefaultDoc(match.parsedTo),\n              s3DomainName,\n              handler.event,\n            );\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = await rewrite(\n          forceDefaultDoc(request.uri),\n          s3DomainName,\n          handler.event,\n        );\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!');\n  return;\n};\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst isAbsoluteURI = to => {\n  const test = options.regex.absoluteUri.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' && !!options.defaultDoc\n    ? path.join(uri, options.defaultDoc)\n    : uri;\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\n///////////////////////\n// Rules Parsing     //\n///////////////////////\nconst conditionMap = {\n  Language: 'Accept-Language',\n  Country: 'CloudFront-Viewer-Country',\n};\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, (_, k) => obj[key]),\n    pattern,\n  );\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst parseRules = stringFile =>\n  stringFile\n    // remove empty and commented lines\n    .replace(options.regex.ignoreRules, '')\n    // split all lines\n    .split(/[\\r\\n]/gm)\n    // strip out the last line break\n    .filter(l => l !== '')\n    .map(l => {\n      // regex\n      const [first, from, to, status, force, conditions] = l.match(\n        options.regex.ruleline,\n      );\n      // restructure into object\n      return {\n        from,\n        to,\n        status: status ? parseInt(status, 10) : options.defaultStatus,\n        force: !!force,\n        conditions,\n      };\n    });\n\nconst findMatch = (data, uri) => {\n  let params;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = from(parse(uri).pathname);\n    return params !== false;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\n///////////////////////\n// Data Fetching     //\n///////////////////////\nconst doesKeyExist = rawKey => {\n  const Key = rawKey.replace(/^\\/+/, '');\n  return cache.get(`doesKeyExist_${Key}`, () =>\n    S3.headObject({\n      Bucket: originBucket,\n      Key,\n    })\n      .promise()\n      .then(data => {\n        logger('doesKeyExist FOUND: ', Key);\n        return true;\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey' || err.code === 'NotFound') {\n          logger('doesKeyExist NOT Found: ', Key);\n          return false;\n        }\n        logger('doesKeyExist err: ', err);\n        return false;\n      }),\n  );\n};\n\nconst getRedirectData = () => {\n  const Key = !options.multiFile\n    ? options.file\n    : `${options.file}_${incomingHost}`;\n  return cache.get(`getRedirectData_${Key}`, () => {\n    logger(`\n      Getting Rules from: ${options.rules ? 'Options' : 'S3'}\n      Bucket: ${options.rulesBucket}\n      Key: ${Key}`);\n    return options.rules\n      ? parseRules(options.rules)\n      : S3.getObject({\n          Bucket: options.rulesBucket,\n          Key,\n        })\n          .promise()\n          .then(data => parseRules(data.Body.toString()))\n          .catch(err => {\n            logger('No _redirects file', err);\n            return false;\n          });\n  });\n};\n\nconst getProxyResponse = resp => {\n  const { status, statusText, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription: statusText,\n    headers,\n    body: JSON.stringify(data),\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  const Key = options.custom404;\n  return cache.get(`get404Response_${Key}`, () =>\n    S3.getObject({\n      Bucket: originBucket,\n      Key,\n    })\n      .promise()\n      .then(({ Body }) => {\n        logger('Custom 404 FOUND');\n        return {\n          status: '404',\n          statusDescription: STATUS_CODES['404'],\n          headers: {\n            'content-type': [\n              {\n                key: 'Content-Type',\n                value: 'text/html',\n              },\n            ],\n          },\n          body: Body.toString(),\n        };\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey') {\n          logger('Custom 404 NOT Found');\n        }\n        logger('Get404ResponseErr', err);\n        return false;\n      }),\n  );\n};\n\n///////////////////////////\n// Event Generators     //\n//////////////////////////\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, host, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, {\n      Records: [\n        {\n          cf: {\n            request: {\n              headers: { host: [{ key: 'Host', value: host }] },\n              uri: to,\n            },\n          },\n        },\n      ],\n    });\n  logger('Rewriting Event: ', JSON.stringify(resp));\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = { ...lambdaReponseToObj(request), validateStatus: null, url };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then(data => {\n      logger('PROXY data: ', _omit(data, ['request', 'config']));\n      return getProxyResponse(data);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n"],"names":["log","debug","console","bind","S3","AWS","deepmerge","x","y","rest","merge","arrayMerge","combineMerge","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","Cache","constructor","ttlSeconds","cache","NodeCache","stdTTL","checkperiod","useClones","ttl","get","key","storeFunction","Promise","resolve","then","result","set","del","keys","setDefaultTtl","flush","delStartWith","startStr","flushAll","CacheService","route","pathMatch","sensitive","strict","end","originBucket","incomingHost","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","headers","host","s3DomainName","s3","domainName","replace","defaults","file","multiFile","rulesBucket","regex","htmlEnd","ignoreRules","ruleline","absoluteUri","defaultStatus","redirectStatuses","friendlyUrls","defaultDoc","custom404","cacheTtl","logger","JSON","stringify","uri","Error","keyExists","doesKeyExist","isUnFriendlyUrl","match","first","fullpath","filename","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","includes","to","test","capitalizeParam","param","split","map","charAt","toUpperCase","join","path","extname","lambdaReponseToObj","req","method","body","_omit","_reduce","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","find","replacePlaceholders","obj","pattern","_","k","replaceSplats","replaceAll","parseRules","stringFile","filter","l","from","force","conditions","parseInt","params","_find","o","parse","pathname","rawKey","Key","headObject","Bucket","promise","catch","errorType","code","rules","getObject","Body","toString","getProxyResponse","resp","statusText","_omitBy","response","statusDescription","get404Response","STATUS_CODES","location","url","config","validateStatus","axios","before"],"mappings":"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"}