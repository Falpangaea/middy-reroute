{"version":3,"file":"reroute.esm.js","sources":["../src/utils/logger.js","../src/s3.js","../src/utils/deepmerge.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import AWS from 'aws-sdk';\nconst S3 = new AWS.S3();\n\nexport default S3;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: arrayMerge || combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import logger from './utils/logger';\nimport { STATUS_CODES } from 'http';\nimport S3 from './s3';\nimport axios from 'axios';\nimport merge from './utils/deepmerge';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const defaults = {\n    file: '_redirects',\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:#.*[\\r\\n]|\\s*[\\r\\n])/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?/,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    bucketName: origin.s3.domainName.replace('.s3.amazonaws.com', ''),\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n  };\n  options = merge(defaults, opts);\n  logger('Raw Event: ', JSON.stringify(handler.event));\n  logger('Middleware Options: ', options);\n\n  logger('Request.Uri: ', request.uri);\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Check if there is a file with extension at the end of the path\n    const isFile = path.extname(request.uri) !== '';\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (!keyExists && isUnFriendlyUrl) {\n      const [first, fullpath, file, filename] = isUnFriendlyUrl;\n      const end = filename === 'index' ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n\n      // Find URI match in the rules\n      const match = findMatch(data, request.uri);\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(forceDefaultDoc(match.parsedTo), handler.event);\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = !isFile\n          ? await rewrite(forceDefaultDoc(request.uri), handler.event)\n          : handler.event;\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!');\n  return;\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\n\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst findMatch = (data, uri) => {\n  let params;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = from(parse(uri).pathname);\n    return params !== false;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\nconst getRedirectData = () => {\n  logger('Getting Rules from: ', options.rules ? 'Options' : 'S3');\n  return options.rules\n    ? parseRules(options.rules)\n    : S3.getObject({\n        Bucket: options.bucketName,\n        Key: options.file,\n      })\n        .promise()\n        .then(data => parseRules(data.Body.toString()))\n        .catch(err => {\n          logger('No _redirects file', err);\n          return false;\n        });\n};\n\nconst parseRules = stringFile =>\n  stringFile\n    // remove empty and commented lines\n    .replace(options.regex.ignoreRules, '')\n    // split all lines\n    .split(/[\\r\\n]/gm)\n    // strip out the last line break\n    .filter(l => l !== '')\n    .map(l => {\n      // regex\n      const [first, from, to, status, force] = l.match(options.regex.ruleline);\n      // restructure into object\n      return {\n        from,\n        to,\n        status: status ? parseInt(status, 10) : options.defaultStatus,\n        force: !!force,\n      };\n    });\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, (_, k) => obj[key]),\n    pattern,\n  );\n\nconst doesKeyExist = key => {\n  const parsedKey = key.replace(/^\\/+/, '');\n  return S3.headObject({\n    Bucket: options.bucketName,\n    Key: parsedKey,\n  })\n    .promise()\n    .then(data => {\n      logger('doesKeyExist FOUND: ', parsedKey);\n      return true;\n    })\n    .catch(err => {\n      if (err.errorType === 'NoSuchKey') {\n        logger('doesKeyExist NOT Found: ', parsedKey);\n        return false;\n      }\n      logger('doesKeyExist err: ', err);\n      return false;\n    });\n};\n\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, { Records: [{ cf: { request: { uri: to } } }] });\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = { ...lambdaReponseToObj(request), validateStatus: null, url };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then(data => {\n      logger('PROXY data: ', _omit(data, ['request', 'config']));\n      return getProxyResponse(data);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst isAbsoluteURI = to => {\n  const test = /^(?:[a-z]+:)?\\/\\//.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' && !!options.defaultDoc\n    ? path.join(uri, options.defaultDoc)\n    : uri;\n\nconst getProxyResponse = resp => {\n  const { status, statusText, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription: statusText,\n    headers,\n    body: JSON.stringify(data),\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  return S3.getObject({\n    Bucket: options.bucketName,\n    Key: options.custom404,\n  })\n    .promise()\n    .then(({ Body }) => {\n      logger('Custom 404 FOUND');\n      return {\n        status: '404',\n        statusDescription: STATUS_CODES['404'],\n        headers: {\n          'content-type': [\n            {\n              key: 'Content-Type',\n              value: 'text/html',\n            },\n          ],\n        },\n        body: Body.toString(),\n      };\n    })\n    .catch(err => {\n      if (err.errorType === 'NoSuchKey') {\n        logger('Custom 404 NOT Found');\n      }\n      logger('Get404ResponseErr', err);\n      return false;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n"],"names":["log","debug","console","bind","S3","AWS","deepmerge","x","y","arrayMerge","rest","merge","combineMerge","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","route","pathMatch","sensitive","strict","end","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","defaults","file","regex","htmlEnd","ignoreRules","ruleline","defaultStatus","redirectStatuses","bucketName","s3","domainName","replace","friendlyUrls","defaultDoc","custom404","logger","JSON","stringify","uri","keyExists","doesKeyExist","isFile","path","extname","isUnFriendlyUrl","match","first","fullpath","filename","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","includes","find","params","_find","o","from","parse","pathname","replaceAll","to","rules","parseRules","getObject","Bucket","Key","promise","then","Body","toString","catch","stringFile","split","filter","l","map","force","parseInt","obj","pattern","replaceSplats","replacePlaceholders","_","k","_reduce","result","key","parsedKey","headObject","errorType","statusDescription","STATUS_CODES","headers","location","resp","get404Response","url","config","lambdaReponseToObj","validateStatus","axios","_omit","getProxyResponse","req","method","body","test","capitalizeParam","param","charAt","toUpperCase","join","statusText","_omitBy","response","before"],"mappings":"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"}